///////////////////////////////////////////////////////////
//  Pais.cs
//  Implementation of the Class Pais
//  Generated by Enterprise Architect
//  Created on:      04-Sep-2020 11:29:33 PM
//  Original author: Ignacio Andre Keiniger
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Net;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace TPANUAL {

	[Table("pais")]
	public class Pais {

		[Key]
		[Column("ID_Pais")]
		public string ID_Pais { get; set; }

		[Column("Nombre")]
		public string Nombre { get; set; }

		[Column("ID_Moneda")]
		public string ID_Moneda { get; set; }

		public Moneda Moneda { get; set; }

		public List<Provincia> provincias { get; set; }

		public Pais(string _id)
		{
			// Pido info del pais en la API
			WebRequest request_pais = HttpWebRequest.Create("https://api.mercadolibre.com/classified_locations/countries/" + _id);
			bool leidoCorrectamente = true;
			try
			{
				request_pais.GetResponse();
			}
			catch (System.Net.WebException e)
			{
				Console.WriteLine(e);
				Console.WriteLine("\nId de pais " + _id + " erroneo.");
				leidoCorrectamente = false;
				Console.WriteLine(_id);
			}
			if (leidoCorrectamente)
			{
				WebResponse response_pais = request_pais.GetResponse();
				StreamReader reader_pais = new StreamReader(response_pais.GetResponseStream());

				// Guardo el JSON leido en un objeto
				string objetoJSON_pais = reader_pais.ReadToEnd();
				ML_Country ML_CountryObject = Newtonsoft.Json.JsonConvert.DeserializeObject<ML_Country>(objetoJSON_pais);

				ID_Pais = ML_CountryObject.id;
				Nombre = ML_CountryObject.name;
				Moneda = new Moneda(ML_CountryObject.currency_id);

                this.imprimir();

				llenarProvincias(ML_CountryObject.states);
			}
		}

		public Pais() { }

		private void llenarProvincias(List<ML_PlaceSmall> _provincias)
		{
			provincias = new List<Provincia> { };
			// Chequeo que la lista no esté vacía
			if (_provincias?.Any() == true)
			{ 
				foreach (ML_PlaceSmall provincia in _provincias)
				{
					//Console.WriteLine(provincia.name);
					provincias.Add(new Provincia(provincia.id));
				}
			}
		}

		public void imprimir()
        {
			Console.WriteLine("____________________________________________________________________________________");
			Console.WriteLine("ID: " + ID_Pais);
			Console.WriteLine("Nombre pais: " + Nombre);
			Console.WriteLine("Moneda pais: " + Moneda.Descripcion);
		}

		public static List<Pais> obtenerPaises()
        {
			using var contexto = new DB_Context();
			var paises = contexto.pais
				.ToList();

			return paises;
		}
		
		public static List<Pais> obtenerPais(string _id)
		{
			using var contexto = new DB_Context();
			var pais = contexto.pais
				.Where(p => p.ID_Pais == _id)
				.ToList();

			return pais;
		}
	}
}
